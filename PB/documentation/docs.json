{"swagger": "2.0", "info": {"title": "Toronto Fitness Club API", "version": "v1"}, "host": "localhost:1234", "schemes": ["http"], "basePath": "/", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Basic": {"type": "basic"}}, "security": [{"Basic": []}], "paths": {"/accounts/edit/": {"get": {"operationId": "accounts_edit_read", "description": "Update a users data", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RegisterAccount"}}}, "tags": ["accounts"]}, "put": {"operationId": "accounts_edit_update", "description": "Update a users data", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RegisterAccount"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RegisterAccount"}}}, "tags": ["accounts"]}, "patch": {"operationId": "accounts_edit_partial_update", "description": "Update a users data", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RegisterAccount"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/RegisterAccount"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/login/": {"post": {"operationId": "accounts_login_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/login/refresh/": {"post": {"operationId": "accounts_login_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/login/verify/": {"post": {"operationId": "accounts_login_verify_create", "description": "Takes a token and indicates if it is valid.  This view provides no\ninformation about a token's fitness for a particular use.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenVerify"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenVerify"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/payment/": {"post": {"operationId": "accounts_payment_create", "description": "Creates a payment method for a user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Payment"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Payment"}}}, "tags": ["accounts"]}, "parameters": []}, "/accounts/signup/": {"post": {"operationId": "accounts_signup_create", "description": "Creates a new user", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/RegisterAccount"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/RegisterAccount"}}}, "tags": ["accounts"]}, "parameters": []}, "/classes/schedule/": {"get": {"operationId": "classes_schedule_read", "description": "Get user's class schedule.", "parameters": [{"name": "from", "in": "query", "description": "The date the returned schedule will begin from. If not specified, the current date and time is used.", "type": "date-time"}, {"name": "to", "in": "query", "description": "The date the returned schedule will end at. If not specified, one month from today is used.", "type": "date-time"}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/UserClassSchedule"}}}, "tags": ["classes"]}, "parameters": []}, "/classes/{id}/": {"get": {"operationId": "classes_read", "description": "List of all classes in studio {id}.", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Class"}}}}}}, "tags": ["classes"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this class.", "required": true, "type": "integer"}]}, "/classes/{id}/disenrol/": {"post": {"operationId": "classes_disenrol_create", "description": "Disenrol from class {id}.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Disenrol"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Disenrol"}}}, "tags": ["classes"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/classes/{id}/enrol/": {"post": {"operationId": "classes_enrol_create", "description": "Enrol in class {id}.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/Enrol"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/Enrol"}}}, "tags": ["classes"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/classes/{id}/schedule/": {"get": {"operationId": "classes_schedule_list", "description": "Schedule of all classes in studio {id}.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "from", "in": "query", "description": "The date the returned schedule will begin from. If not specified, the current date and time is used.", "type": "date-time"}, {"name": "to", "in": "query", "description": "The date the returned schedule will end at. If not specified, one month from today is used.", "type": "date-time"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"type": "array", "items": {"$ref": "#/definitions/ClassOccurrence"}}}}}}}, "tags": ["classes"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/studios/": {"get": {"operationId": "studios_list", "description": "List of all studios.", "parameters": [{"name": "search", "in": "query", "description": "A search term.", "required": false, "type": "string"}, {"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}, {"name": "latitude", "in": "query", "description": "If latitude and longitude are provided, the list in the response will be sorted by distance.", "type": "float"}, {"name": "longitude", "in": "query", "description": "If latitude and longitude are provided, the list in the response will be sorted by distance.", "type": "float"}, {"name": "postal_code", "in": "query", "description": "If postal code is provided, the list in the response will be sorted by distance.", "type": "string"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Studio"}}}}}}, "tags": ["studios"]}, "parameters": []}, "/studios/{id}/": {"get": {"operationId": "studios_read", "description": "Retrieves a single studio with extra detail like its images, amenities, and more.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/StudioDetailSerialzier"}}}, "tags": ["studios"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this studio.", "required": true, "type": "integer"}]}, "/subscriptions/": {"get": {"operationId": "subscriptions_list", "description": "List all subscriptions", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Subscription"}}}}}}, "tags": ["subscriptions"]}, "parameters": []}, "/subscriptions/payments/": {"get": {"operationId": "subscriptions_payments_list", "description": "View all of users current and upcoming payments", "parameters": [{"name": "limit", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}, {"name": "offset", "in": "query", "description": "The initial index from which to return the results.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri", "x-nullable": true}, "previous": {"type": "string", "format": "uri", "x-nullable": true}, "results": {"type": "array", "items": {"$ref": "#/definitions/Purchase"}}}}}}, "tags": ["subscriptions"]}, "parameters": []}, "/subscriptions/{id}/subscribe/": {"post": {"operationId": "subscriptions_subscribe_create", "description": "User subscribes to subscription {id}", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["subscriptions"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}, "/subscriptions/{id}/unsubscribe/": {"post": {"operationId": "subscriptions_unsubscribe_create", "description": "User unsubscribes from subscription {id}", "parameters": [], "responses": {"201": {"description": ""}}, "tags": ["subscriptions"]}, "parameters": [{"name": "id", "in": "path", "required": true, "type": "string"}]}}, "definitions": {"RegisterAccount": {"required": ["email", "first_name", "last_name", "password"], "type": "object", "properties": {"email": {"title": "Email", "type": "string", "format": "email", "minLength": 1}, "first_name": {"title": "First name", "type": "string", "minLength": 1}, "last_name": {"title": "Last name", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true, "format": "uri"}, "phone_number": {"title": "Phone number", "type": "string", "minLength": 1}}}, "TokenObtainPair": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}, "access": {"title": "Access", "type": "string", "readOnly": true, "minLength": 1}}}, "TokenVerify": {"required": ["token"], "type": "object", "properties": {"token": {"title": "Token", "type": "string", "minLength": 1}}}, "Payment": {"required": ["cc_number", "cc_expiry", "cc_code"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "cc_number": {"title": "Card number", "type": "string", "maxLength": 25, "minLength": 13}, "cc_expiry": {"title": "Expiration date", "type": "string", "format": "date"}, "cc_code": {"title": "Security code", "type": "string", "pattern": "^\\d{3,4}$", "maxLength": 4, "minLength": 1}}}, "UserClassSchedule": {"type": "object", "properties": {"classes": {"title": "Classes", "type": "string", "readOnly": true}}}, "Class": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "description": {"title": "Description", "type": "string", "x-nullable": true}, "coach": {"title": "Coach", "type": "string", "maxLength": 255, "x-nullable": true}, "total_capacity": {"title": "Total capacity", "type": "integer", "x-nullable": true}, "available_capacity": {"title": "Available capacity", "type": "string", "readOnly": true}}}, "Disenrol": {"type": "object", "properties": {"class_date": {"title": "Class date", "description": "If provided, disenrols the user from the class on the given date. If not provided, disenrols the user from every future occurrence of the class.", "type": "string", "format": "date-time"}}}, "Enrol": {"type": "object", "properties": {"class_date": {"title": "Class date", "description": "If provided, enrols the user in the class on the given date. If not provided, enrols the user for every future occurrence of the class.", "type": "string", "format": "date-time"}}}, "ClassOccurrence": {"type": "object", "properties": {"id": {"title": "Id", "type": "string", "readOnly": true}, "start": {"title": "Start", "type": "string", "readOnly": true}, "end": {"title": "End", "type": "string", "readOnly": true}, "available_capacity": {"title": "Available capacity", "type": "string", "readOnly": true}}}, "Studio": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "address": {"title": "Address", "type": "string", "maxLength": 255, "x-nullable": true}, "geolocation": {"title": "Geolocation", "type": "string", "maxLength": 100, "x-nullable": true}, "postal_code": {"title": "Postal code", "type": "string", "maxLength": 6, "x-nullable": true}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 128, "x-nullable": true}, "km_distance": {"title": "Km distance", "type": "string", "readOnly": true}}}, "StudioDetailSerialzier": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "address": {"title": "Address", "type": "string", "maxLength": 255, "x-nullable": true}, "geolocation": {"title": "Geolocation", "type": "string", "maxLength": 100, "x-nullable": true}, "postal_code": {"title": "Postal code", "type": "string", "maxLength": 6, "x-nullable": true}, "phone_number": {"title": "Phone number", "type": "string", "maxLength": 128, "x-nullable": true}, "images": {"title": "Images", "type": "string", "readOnly": true}, "amenities": {"title": "Amenities", "type": "string", "readOnly": true}, "google_maps_url": {"title": "Google maps url", "type": "string", "readOnly": true}}}, "Subscription": {"required": ["name", "price", "payment_interval"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "name": {"title": "Name", "type": "string", "maxLength": 255, "minLength": 1}, "price": {"title": "Price", "type": "string", "format": "decimal"}, "payment_interval": {"title": "Payment interval", "type": "string"}}}, "User": {"required": ["username", "password", "email", "first_name", "last_name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "password": {"title": "Password", "type": "string", "maxLength": 128, "minLength": 1}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}, "first_name": {"title": "First name", "type": "string", "maxLength": 150}, "last_name": {"title": "Last name", "type": "string", "maxLength": 150}}}, "Account": {"type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"$ref": "#/definitions/User"}, "phone_number": {"title": "Phone number", "type": "string", "readOnly": true}, "avatar": {"title": "Avatar", "type": "string", "readOnly": true}, "payment_method": {"$ref": "#/definitions/Payment"}, "subscription": {"$ref": "#/definitions/Subscription"}}}, "Purchase": {"required": ["purchase_name", "date", "price"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "purchase_name": {"title": "Purchase name", "type": "string", "maxLength": 255, "minLength": 1}, "date": {"title": "Date", "type": "string", "format": "date"}, "price": {"title": "Price", "type": "string", "format": "decimal"}, "upcoming": {"title": "Upcoming", "type": "boolean"}, "user": {"type": "array", "items": {"$ref": "#/definitions/Account"}, "readOnly": true}, "card": {"$ref": "#/definitions/Payment"}}}}}